{"componentChunkName":"component---node-modules-gatsby-theme-autokin-docs-src-components-template-js","path":"/v2.5/","webpackCompilationHash":"","result":{"data":{"site":{"pathPrefix":"/docs/react","siteMetadata":{"title":"Autokin Automation","description":"A guide to using the Apollo GraphQL Client with React","twitterHandle":"autokinjs"}},"file":{"childMarkdownRemark":null,"childMdx":{"frontmatter":{"title":"Introduction","description":"What is Apollo Client and what does it do?"},"headings":[{"value":"Getting started"},{"value":"Prefer a non-React platform?"},{"value":"Just using GraphQL?"}],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Introduction\",\n  \"description\": \"What is Apollo Client and what does it do?\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Apollo Client is the best way to use GraphQL to build client applications. The client is designed to help you quickly build a UI that fetches data with GraphQL, and can be used with any JavaScript front-end. The client is:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Incrementally adoptable:\"), \" You can drop it into an existing app today.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Universally compatible:\"), \" Apollo works with any build setup, any GraphQL server, and any GraphQL schema.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Simple to get started with:\"), \" Start loading data right away and learn about advanced features later.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Inspectable and understandable:\"), \" Interrogate and understand exactly what is happening in an application.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Built for interactive apps:\"), \" Application users make changes and see them reflected immediately.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Small and flexible:\"), \" You don't get stuff your application doesn't need.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Community driven:\"), \" Apollo is driven by the community and serves a variety of use cases.\")), mdx(\"h2\", {\n    \"id\": \"getting-started\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#getting-started\",\n    \"aria-label\": \"getting started permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Getting started\"), mdx(\"p\", null, \"The docs for Apollo Client are mainly written using the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/v2.5/essentials/get-started/\"\n  }), \"React integration\"), \", but most of the examples work no matter where you use Apollo. The docs are broken into five distinct sections to make it easy to find your way around:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ESSENTIALS:\"), \" Outlines everything you need to know in order to get up and running quickly.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"FEATURES:\"), \" Details the amazing things you can do with Apollo Client.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ADVANCED:\"), \" Covers the more advanced Apollo Client capabilities that your app may need.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"RECIPES:\"), \" Learn about and understand common patterns.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"API:\"), \" Full API details for Apollo Client and React Apollo.\")), mdx(\"h2\", {\n    \"id\": \"prefer-a-non-react-platform\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#prefer-a-non-react-platform\",\n    \"aria-label\": \"prefer a non react platform permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Prefer a non-React platform?\"), mdx(\"p\", null, \"Most of this site's documentation examples are written using React, but Apollo Client supports many other platforms:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.apollographql.com/docs/angular\"\n  }), \"Angular\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/v2.5/integrations/#vue\"\n  }), \"Vue\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/v2.5/recipes/meteor/\"\n  }), \"Meteor\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/v2.5/integrations/#ember\"\n  }), \"Ember\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web Components\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/v2.5/integrations/#web-components\"\n  }), \"Apollo Elements\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Native mobile\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.apollographql.com/docs/ios\"\n  }), \"Native iOS with Swift\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.apollographql.com/docs/android\"\n  }), \"Native Android with Java\"))))), mdx(\"h2\", {\n    \"id\": \"just-using-graphql\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#just-using-graphql\",\n    \"aria-label\": \"just using graphql permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Just using GraphQL?\"), mdx(\"p\", null, \"We believe that using GraphQL should be easy and fun. One of the ways that Apollo supports this is that you can write your queries in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/graphql/graphiql\"\n  }), \"GraphiQL\"), \" and they will just work with Apollo Client! Because Apollo Client doesn't assume anything beyond the official GraphQL specification, it works with every GraphQL server implementation, for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"every\"), \" language. Apollo Client doesn't impose any requirements on your schema either! If you can send a query to a standard GraphQL server, Apollo Client can handle it. You can find a list of\\nGraphQL server implementations at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://graphql.org/code/#server-libraries\"\n  }), \"graphql.org\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"749b5b5b-9564-517a-a815-a71825b2d84e","sidebarContents":[{"title":null,"pages":[{"title":"Introduction","path":"/v2.5/"},{"title":"Why Apollo Client?","path":"/v2.5/why-apollo/"},{"title":"View integrations","path":"/v2.5/integrations/"},{"title":"New in React Apollo 2.1","path":"/v2.5/react-apollo-migration/"}]},{"title":"Essentials","pages":[{"title":"Get started","path":"/v2.5/essentials/get-started/"},{"title":"Queries","path":"/v2.5/essentials/queries/"},{"title":"Mutations","path":"/v2.5/essentials/mutations/"},{"title":"Local state management","path":"/v2.5/essentials/local-state/"}]},{"title":"Features","pages":[{"title":"Error handling","path":"/v2.5/features/error-handling/"},{"title":"Pagination","path":"/v2.5/features/pagination/"},{"title":"Optimistic UI","path":"/v2.5/features/optimistic-ui/"},{"title":"Server-side rendering","path":"/v2.5/features/server-side-rendering/"},{"title":"Developer tools","path":"/v2.5/features/developer-tooling/"}]},{"title":"Advanced","pages":[{"title":"Apollo Boost migration","path":"/v2.5/advanced/boost-migration/"},{"title":"Subscriptions","path":"/v2.5/advanced/subscriptions/"},{"title":"Network layer (Apollo Link)","path":"/v2.5/advanced/network-layer/"},{"title":"Caching data","path":"/v2.5/advanced/caching/"},{"title":"Using fragments","path":"/v2.5/advanced/fragments/"}]},{"title":"Recipes","pages":[{"title":"Authentication","path":"/v2.5/recipes/authentication/"},{"title":"Testing React components","path":"/v2.5/recipes/testing/"},{"title":"Mocking new schema capabilities","path":"/v2.5/recipes/client-schema-mocking/"},{"title":"Using Apollo with TypeScript","path":"/v2.5/recipes/static-typing/"},{"title":"Improving performance","path":"/v2.5/recipes/performance/"},{"title":"Integrating with React Native","path":"/v2.5/recipes/react-native/"},{"title":"Compiling queries with Babel","path":"/v2.5/recipes/babel/"},{"title":"Loading queries with Webpack","path":"/v2.5/recipes/webpack/"},{"title":"Integrating with Meteor","path":"/v2.5/recipes/meteor/"},{"title":"Recompose patterns","path":"/v2.5/recipes/recompose/"},{"title":"Apollo Client 1.0 migration","path":"/v2.5/recipes/2.0-migration/"}]},{"title":"API","pages":[{"title":"Apollo Client","path":"/v2.5/api/apollo-client/"},{"title":"React Apollo","path":"/v2.5/api/react-apollo/"}]}],"githubUrl":"https://github.com/apollographql/apollo-client/tree/master/docs/source/docs/source/index.mdx","spectrumUrl":"https://spectrum.chat/Autokin/apollo-client","versions":["2.5","2.4"],"defaultVersion":2.6,"baseUrl":"https://www.autokinjs.com"}}}